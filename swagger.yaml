openapi: 3.0.0
info:
  title: Todo API with Authentication
  version: 1.0.0
  description: API for managing todos with user authentication

servers:
  - url: http://localhost:3000/api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User registered successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                      email:
                        type: string
                  token:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /tasks:
    get:
      summary: Get all tasks for the authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Tasks retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        description:
                          type: string
                        completed:
                          type: boolean
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Server error

    post:
      summary: Create a new task
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Task created successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                      completed:
                        type: boolean
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /tasks/{taskId}:
    put:
      summary: Update a task
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                completed:
                  type: boolean
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Task updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                      completed:
                        type: boolean
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '500':
          description: Server error

    delete:
      summary: Delete a task
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Task deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '500':
          description: Server error