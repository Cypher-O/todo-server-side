openapi: 3.0.0
info:
  title: Authenticator API
  version: 1.0.0
  description: The application can create & login customers, generate & verify users, generate & verify otp

servers:
  - url: https://authenticator-api-v1ck.onrender.com/api/auth

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_name:
                  type: string
                username:
                  type: string
                password:
                  type: string
                image:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User registered successfully
                  data:
                    type: object
                  token:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /generate-user:
    post:
      summary: Generate a new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                unique_id:
                  type: string
                type:
                  type: string
      responses:
        '200':
          description: User generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User generated successfully
                  data:
                    type: object
                    properties:
                      qr_code:
                        type: string
                      username:
                        type: string
                      password:
                        type: string
                      user_type:
                        type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /verify-user:
    post:
      summary: Verify user credentials
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Username and password verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Username and password verified
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      otp:
                        type: string
                      otp_expires_seconds:
                        type: integer
                      company_name:
                        type: string
                      customer_logo:
                        type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /generate-otp:
    post:
      summary: Generate OTP for multiple users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usernames:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OTP Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: OTP Token generated successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                        otp:
                          type: string
                        otp_expires_seconds:
                          type: integer
        '400':
          description: Bad request
        '404':
          description: No valid usernames found
        '500':
          description: Server error

  /verify-otp:
    post:
      summary: Verify OTP token
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                unique_id:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Token is valid
                  data:
                    type: array
                    items: {}
        '400':
          description: Bad request
        '401':
          description: Invalid unique ID or expired token
        '500':
          description: Server error

  /user/{userId}:
    get:
      summary: Get user data
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User data fetched successfully
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                      generatedUsers:
                        type: array
                        items:
                          type: object
        '400':
          description: Bad request
        '500':
          description: Server error
